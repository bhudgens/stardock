#!/usr/bin/env bash
# vim:syn=sh
### Usage:
###    stardock-containerize <git_url> <container_name> <orders_dir>
### --help
###
### Make a new container for a git repository service.
### This uses Heroku buildpacks, and will detect how to create your
### container automatically.
###
### Once this script is done, you will have a running container.
###
### The container will have a layout with the following special directories:
### ${HOME}/app - Your git repository will be here
### ${HOME}/start - This is the Heroku style start script
export DIR=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)
source "$DIR/stardock-launcher"

#places for things to live
STARDOCK_BASE="${STARDOCK_BASE:-stardock-base}"

ORDERS="${orders_dir}/orders"

#build script for our service container, the most important thing is that
#it gets the source from git
#the second most important thing is to know that this runs on the container
CONTAINER_BUILD_SCRIPT=${STARDOCK_TMP}/${container_name}.build

# Load the launcher in the build script
cat << 'EOF' > ${CONTAINER_BUILD_SCRIPT}
#!/usr/bin/env bash
## Usage:
##    build_script
## --help
##
## This script helps setup the container and runs a similar
## setup to heroku, running buildbacks and other various
## functions.  This scripts is unique per container
## and dynamically built
export DIR=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)
source "$DIR/stardock-launcher"
EOF

# This is intentionally unescaped using syntax like:
# cat << 'EOF' > $file
# Note the single quotes around EOF.  Read more here:
#  http://glg.link/xZHFBw
cat << 'EOF' >> ${CONTAINER_BUILD_SCRIPT}
set -e
source ${STARDOCK_ROOT}/bin/stardock-common
info "build_script|app_install_dir:${HOME}/app"
export APP_IN=${HOME}/app
EOF

# This is intentionally unescaped using syntax like:
# cat << 'EOF' > $file
# Note the single quotes around EOF.  Read more here:
#  http://glg.link/xZHFBw
cat << 'EOF' >> ${CONTAINER_BUILD_SCRIPT}
info "build_script|prepare_ssh"
# buildpacks may pull git and need ssh identity
sudo "${DIR}/stardock-git-config" ${STARDOCK_APP_USER} > /tmp/gitsshconfig
export GIT_SSH=/tmp/gitssh
echo "ssh -F /tmp/gitsshconfig \$@" > /tmp/gitssh
chmod +x /tmp/gitssh
EOF

# Secrets Wrapper Binary hosted by GLG
cat << 'EOF' >> ${CONTAINER_BUILD_SCRIPT}
trace Downloading latest secrets binary
# Using "http" instead of aws command intentionally here.  The aws command
# implies the user will implicitely have aws configured - and, we don't
# want to impose that when we don't need it.
SECRETS_BIN='/usr/bin/secrets'
sudo curl -s 'https://s3.amazonaws.com/glg-deployment-packages/secrets' -o "${SECRETS_BIN}" \
  && echo "download_secrets:success" \
  || echo "download_secrets:fail"
sudo chmod +x "${SECRETS_BIN}"
EOF

#now -- this is escaped, lots of variables included from this script
cat << EOF >> ${CONTAINER_BUILD_SCRIPT}
info "build_script|installing_service:\${HOME}/app"

export ORDERS_NAME="$(basename $(dirname $ORDERS))"
info "build_script|running_orders:\${ORDERS_NAME}"
run_orders ${ORDERS}

info "build_script|running_on_containerize:\${ORDERS_NAME}"
[ -x ${orders_dir}/on_containerize ] && sudo -E ${orders_dir}/on_containerize

info "build_script|fetching_buildpack:\${ORDERS_NAME}"
# Set up a place onboard for possible custom buildpacks
sudo mkdir -p "\${HOME}/build"
sudo chown -R "${STARDOCK_APP_USER}:${STARDOCK_APP_USER}" "\${HOME}/build"
if [ "${git_url}" == "-" ] \
|| [ "${UNPUBLISHED}" == "1" ]; then
  sudo -E "${DIR}/stardock-git-sync" "https://github.com/bhudgens/null-buildpack.git"  "\${HOME}/build/buildpacks/ZZZ-NULL"
fi

info "build_script|builder:${ORDERS}"
"${DIR}/stardock-builder" ${ORDERS}

info "build_script|cronner:${ORDERS}"
"${DIR}/stardock-cronner" ${orders_dir} ${ORDERS}

info "build_script|after_containerize:${orders_dir}/after_containerize"
[ -x ${orders_dir}/after_containerize ] && sudo -E ${orders_dir}/after_containerize

info "build_script|done:container ready"

EOF

info "containerize|building:${container_name}"
#and now, actually make the container for your application
"${STARDOCK_BIN}/stardock-containermake" --run "${container_name}" "${CONTAINER_BUILD_SCRIPT}" "${STARDOCK_BASE}"
