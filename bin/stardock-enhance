#! /usr/bin/env bash
export DIR=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)
source "$DIR/stardock-launcher"
########################################################################
##  Handy tools that aren't probably good enough for starphleet
########################################################################

run_as_root_or_die

if [ -z "${ENHANCE_INIT}" ]; then
  export ENHANCE_INIT="true"
  exec bash --init-file <(cat "${DIR}/stardock-enhance")
fi

export REGION_CACHE="/tmp/.starphleet-region.txt"

if [ ! -f "${REGION_CACHE}" ]; then
  touch "${REGION_CACHE}"
  if ! curl --connect-timeout 1 -s http://169.254.169.254/latest/meta-data/placement/availability-zone | grep 404 > /dev/null; then
    curl --connect-timeout 1 -s http://169.254.169.254/latest/meta-data/placement/availability-zone > "${REGION_CACHE}"
  fi
fi
export AWS_REGION=$(cat "${REGION_CACHE}")
AWS_REGION="${AWS_REGION:-${STARPHLEET_EC2_REGION}}"
AWS_REGION=${AWS_REGION:-"DEVMODE"}

export LABEL="${RUNNING_ON}[${AWS_REGION}]"

cat << EOF

---------------------------------
Stardock Enhanced

  Directories
    hq = Change to headquarters dir
    co = Change to Current Orders dir
    nx = Change to Stardock NGINX dir

  Logs:
    mo = Tail "monitors orders" upstart log
    mr = Tail "remotes" upstart log
    mh = Tail "headquarters" upstart log
    fl = Grep the last 1000000 lines of syslog
    fa = Grep the last 1000000 lines of access_logs
    ta = Tail Syslog (accepts variable for grep)
    tns = Tail Syslog and /var/log/upstart/stardock_nginx.log
    hup = NGINX Hupper Logs
    sll = Stardock List Logs - ordered by time (build logs)
    reap = Tail the Reaper Logs
    sst = stardock-status
    wst = Watch stardock-status
    trub = stardock-status --trouble

  Mail:
    cm = View local mail on devships

  Interacting with Containers:
    ru = Show running containers
    st = Show stopped containers
    sa = stardock-attach <service>

  Redeploying Service:
    sr = stardock-retry-deploy <service>
    srd = stardock-redeploy <service> (WARNING: KILLS ALL!)

  Help:
    ? = This help

EOF

## Make the prompt region specific
export color_prompt=yes
if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@'${LABEL}'\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@'${LABEL}':\w\$ '
fi

## Aliases
alias sa="${DIR}/stardock-attach"
alias srd="sudo stardock-redeploy"
alias hq="cd ${HEADQUARTERS_LOCAL}"
alias co="cd ${CURRENT_ORDERS}"
alias nx="cd ${STARDOCK_NGINX_RUNTIME}"
alias getip='sudo ifconfig eth0 | grep "inet addr" | cut -f2 -d":" | cut -f1 -d" "'
alias mo="sudo tail -n 5000 -f ${STARDOCK_LOGS}/stardock-init-monitor-repos.log"
alias mr="sudo tail -n 5000 -f ${STARDOCK_LOGS}/stardock-init-monitor-remotes.log"
alias mh="sudo tail -n 5000 -f ${STARDOCK_LOGS}/stardock-init-monitor-headquarters.log"
alias ru="docker ps"
alias st="docker ps -f 'status=exited'"
alias sst="${DIR}/stardock-status"
alias wst="watch --color ${DIR}/stardock-status"
alias fl="tail -n 1000000 /var/log/syslog | grep "
alias fa="tail -n 1000000 ${STARDOCK_LOGS}/stardock.log | grep "
alias trub="${DIR}/stardock-status --trouble"
alias hc="curl http://localhost/PUBLIC-forkulator/stardock_full_system_hc"
alias hco="curl http://localhost/PUBLIC-forkulator/stardock_full_system_hc_passed_once"
alias hup="sudo tail -n 5000 -f ${STARDOCK_LOGS}/stardock-init-nginx-hupper.log"
alias reap="sudo tail -n 5000 -f ${STARDOCK_LOGS}/stardock-init-reaper.log"
alias ?="${DIR}/stardock-enhance"

## Functions

# Tail the logs (maybe with search)
function ta ()
{
   [ ! -z $1 ] && sudo journalctl -f | egrep $1 && return
   sudo journalctl -f
}
export -f ta

# Tail last log
function sll ()
{
   [ -z $1 ] && echo "Provide a fuzzy service name" && return
   pushd "${STARDOCK_LOGS}" > /dev/null
   echo "Select which log you want to tail (highest selection is last log)"
   select logfile in $(ls -alFtr *${1}*.build.* | awk '{print $9}'); do
     sudo tail -n 5000 -f "${logfile}"
     break
   done
}
export -f sll
