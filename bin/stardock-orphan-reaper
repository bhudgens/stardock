#!/usr/bin/env bash
# vim:syn=sh
### Usage:
###    stardock-orphan-reaper
### --help
###
### Look through all containers stopped or running and run reaper
### against any missing a current set of orders
export DIR=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)
source "$DIR/stardock-launcher"

die_on_error
run_as_root_or_die

# Go through all containers and reap any orphans
for repo_and_tag in $(docker image ls --format '{{.Repository}},{{.Tag}}' | egrep "^${STARDOCK_BASE}\s*" ); do

  REPO="$(echo $repo_and_tag | cut -f1 -d',')"
  IMAGE="$(echo $repo_and_tag | cut -f2 -d',')"

  # We have a few images that are
  # based on the base image that
  # we'd want to keep around but they
  # are special.  For instance, the nginx
  # image.  We also want to skip the
  # image tagged with 'latest' since that
  # is actually the base image.
  if [ $IMAGE == "latest" ] \
  || [ $IMAGE == "${STARDOCK_NGINX_CONTAINER}" ]; then
    continue
  fi
  # Yank the sha(s) off the IMAGE
  SERVICE=$(echo "${IMAGE}" | sed -E -e 's/(.*)-[a-f0-9]+-[a-f0-9]+/\1/g')
  [ -z "${SERVICE}" ] && continue
  # If no orders correspond with the service - reap it
  if [ ! -f "${HEADQUARTERS_LOCAL}/${SERVICE}/orders" ]; then
    "${STARDOCK_BIN}/starphleet-reaper" zzzzzzzzz "${SERVICE}" --force
    [ -d "${HEADQUARTERS_LOCAL}/${SERVICE}" ] && rm -rf "${HEADQUARTERS_LOCAL}/${SERVICE}"
    [ -d "${CURRENT_ORDERS}/${SERVICE}" ] && rm -rf "${CURRENT_ORDERS}/${SERVICE}"
  fi
done
