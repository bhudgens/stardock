#!/usr/bin/env bash
### Usage:
###    stardock-init-monitor-headquarters
### --help
###
### One of the primary init threads that manages monitoring
### repos.  This will look through the HQ's and try to
### start any orders files
# vim:ft=sh
export DIR=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)
source "$DIR/stardock-launcher"

#####################################################################
# Monitor Headquarters
#
# We poll the headquarters (our central config) for updates
# and when we find updates we take various actions.  The
# central config has the ability to drop files on the root
# file system and as such we will restart services on the
# host OS when configured to do so.  We tell NGINX to hup
# because there may be implications to the changes inside
# the proxy to our services
#####################################################################
while [ 1 ]; do
  source "${DIR}/stardock-common"
  if [ -n "${HEADQUARTERS_REMOTE}" ]; then
    if "${DIR}/stardock-git-sync" "${HEADQUARTERS_REMOTE}" "${HEADQUARTERS_LOCAL}"; then
      # XXX: Backwards compatability
      if [ -n "${STARDOCK_ENABLE_HQ_OVERLAY}" ] \
      && [ -d ${HEADQUARTERS_LOCAL}/overlay ]; then
        cp -R ${HEADQUARTERS_LOCAL}/overlay/* /
      fi

      if [ -n "${STARDOCK_ENABLE_SHIP_SCRIPTS}" ]; then

        # Ian's ship script
        if [ -f ${HEADQUARTERS_LOCAL}/run_this_on_update ] \
        && [ -x ${HEADQUARTERS_LOCAL}/run_this_on_update ]; then
          ${HEADQUARTERS_LOCAL}/run_this_on_update
        fi

        # Traditional ship hosted scripts
        run_ship_scripts

        for service in $(echo $SERVICES_TO_RESTART_ON_HQ_UPDATE); do
          if [ -f "/etc/init.d/$service" ]; then
            "/etc/init.d/$service" restart || true
            "/etc/init.d/$service" start || true
          fi
          systemctl restart "${service}" || true
          systemctl start "${service}" || true
        done
      fi

      "${DIR}/stardock-hup-nginx"
    fi
  fi
  # we'll wait a bit, and fall through allowing our respawn
  # to start us up again
  sleep "${STARDOCK_PULSE}"
done
